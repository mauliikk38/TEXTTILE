{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","component/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","msg","About","myStyle","borderColor","fontSize","border","class","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Router","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3dbfbd71.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n   \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n<div className=\"container-fluid\">\r\n  <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n      </li>   \r\n      <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n      </li>\r\n     </ul>\r\n    <form className=\"d-flex\" role=\"search\">\r\n      {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n      <button className=\"btn btn-primary\" type=\"submit\">Search</button> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Enable Dark Mode</label>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired,\r\n                    about: PropTypes.string.isRequired}","import React, {useState} from 'react'\r\n\r\n \r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        // console.log(\"uppercase was clicked\" + text );\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"Success\");\r\n    }\r\n    const handleLoClick = () =>{\r\n        // console.log(\"uppercase was clicked\" + text );\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"Success\");\r\n    }\r\n    const handleClearClick = () =>{\r\n        // console.log(\"uppercase was clicked\" + text );\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Clear text\", \"Success\");\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        // console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copy successfully\", \"Success\");\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"remove spaces successfully\", \"Success\");\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container mx-3\" style= {{color:  props.mode ==='dark'?'white':'black' }}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\" style= {{color:  props.mode ==='dark'?'white':'black' }}>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style= {{backgroundColor: props.mode ==='dark'?'#1a1717':'white',color:  props.mode ==='dark'?'white':'black' }} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Extra space remove</button>\r\n        </div>\r\n        <div className=\"container my-4\" style= {{color:  props.mode ==='dark'?'white':'black' }}>\r\n            <h1> Your Text summary</h1>\r\n            <p> {text.split(\" \").filter((element)=>{return element.length!==0}).length} word and {text.length} character</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing To Preview\"}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n       {props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","    import React from 'react'\r\n\r\n    export default function About(props) {\r\n       \r\n        let myStyle = {\r\n            color: props.mode === 'dark'?'white' : '#1a1717',\r\n            backgroundColor : props.mode === 'dark'?'#1a1717' : 'white',\r\n            borderColor: props.mode === 'dark'?'white' : 'black',\r\n            fontSize: '20px',\r\n            border : '2px solid'\r\n        }\r\n           \r\n    return (\r\n        <div className='container' style= {myStyle}>\r\n            <h1 className='my-3'>About us</h1>\r\n            <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\" style= {myStyle} >\r\n  <div class=\"accordion-item\" style= {myStyle} >\r\n    <h2 class=\"accordion-header\" style= {myStyle} >\r\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\" style= {myStyle}>\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\" style= {myStyle}>\r\n      <div class=\"accordion-body\" >Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\" style= {myStyle} >\r\n    <h2 class=\"accordion-header\" style= {myStyle}>\r\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\" style= {myStyle}>\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\" style= {myStyle}>\r\n      <div class=\"accordion-body\" >Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\" style= {myStyle} >\r\n    <h2 class=\"accordion-header\" style= {myStyle}>\r\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\" style= {myStyle}>\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionFlushExample\" style= {myStyle}>\r\n      <div class=\"accordion-body\"  >Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n        </div>\r\n    )\r\n    }\r\n","import Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport Alert from \"./component/Alert\";\nimport \"./App.css\";\nimport About from \"./component/About\";\nimport React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n const showAlert = (message, type ) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    },3000)\n }\n  const toggleMode =() => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#1a1717';\n      showAlert(\"Dark mode has been enabled\", \"Success\");\n      document.title = 'Texttile - Darkmod';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"Success\");\n      document.title = 'Texttile - Lightmod';\n    }\n  } \n  return (\n    \n    <>\n    \n    <Router>\n    <Navbar title=\"TextTile\" about=\"About\" mode={mode} toggleMode={toggleMode} /> \n    <Alert alert= {alert} />\n    <div className=\"container my-5\">\n    <Routes>\n        <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading= \"Enter Your Text Below\" mode={mode} />} />\n        <Route exact path=\"/about\" element={<About mode={mode} />} />\n        </Routes>\n    </div>\n    </Router>\n    </>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","herf","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.0dfd4ae7.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n   \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n<div className=\"container-fluid\">\r\n  {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n  <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li className=\"nav-item\">\r\n        {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n        <a className=\"nav-link active\" aria-current=\"page\" herf=\"#\">Home</a>\r\n      </li>   \r\n      <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n      </li>\r\n     </ul>\r\n    <form className=\"d-flex\" role=\"search\">\r\n      {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n      <button className=\"btn btn-primary\" type=\"submit\">Search</button> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Enable Dark Mode</label>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired,\r\n                    about: PropTypes.string.isRequired}","import React, {useState} from 'react'\r\n\r\n \r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        // console.log(\"uppercase was clicked\" + text );\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"Success\");\r\n    }\r\n    const handleLoClick = () =>{\r\n        // console.log(\"uppercase was clicked\" + text );\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"Success\");\r\n    }\r\n    const handleClearClick = () =>{\r\n        // console.log(\"uppercase was clicked\" + text );\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Clear text\", \"Success\");\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        // console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy successfully\", \"Success\");\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"remove spaces successfully\", \"Success\");\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container mx-3\" style= {{color:  props.mode ==='dark'?'white':'black' }}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\" style= {{color:  props.mode ==='dark'?'white':'black' }}>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style= {{backgroundColor: props.mode ==='dark'?'gray':'white',color:  props.mode ==='dark'?'white':'black' }} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Extra space remove</button>\r\n        </div>\r\n        <div className=\"container my-4\" style= {{color:  props.mode ==='dark'?'white':'black' }}>\r\n            <h1> Your Text summary</h1>\r\n            <p> {text.split(\" \").length} word and {text.length} character</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter the text above in textarea\"}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    \r\n        props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n        </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport Alert from \"./component/Alert\";\nimport \"./App.css\";\nimport About from \"./component/About\";\nimport React, { useState } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   // Link, \n//   Routes\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n const showAlert = (message, type ) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    },3000)\n }\n  const toggleMode =() => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'gray';\n      showAlert(\"Dark mode has been enabled\", \"Success\");\n      document.title = 'Texttile - Darkmod';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"Success\");\n      document.title = 'Texttile - Lightmod';\n    }\n  } \n  return (\n    \n    <>\n    \n    {/* <Router> */}\n    <Navbar title=\"TextTile\" about=\"About\" mode={mode} toggleMode={toggleMode} /> \n    <Alert alert= {alert} />\n    <div className=\"container my-5\">\n    <TextForm showAlert={showAlert} heading= \"Enter Your Text Below\" mode={mode} />\n    {/* <Routes> */}\n        {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading= \"Enter Your Text Below\" mode={mode} />} /> */}\n        {/* <Route exact path=\"/about\" element={<About />} /> */}\n        {/* </Routes> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}